x_train = [1,2,3,4]
y_train = [3,5,7, 8]
W = tf.Variable(tf.random_normal([1]), name='weight')
b = tf.Variable(tf.random_normal([1]), name='bias')
hypothesis = x_train*W + b
cost = tf.reduce_mean(tf.square(hypothesis - y_train))
optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)
train = optimizer.minimize(cost)
ses = tf.Session()
sess.run(tf.global_variables_initializer())
for step in range(2001) :
    sess.run(train)
    if step % 20 ==0:
        print(step, sess.run(cost), sess.run(W), sess.run(b))
        
        
######################################
0 49.067673 [0.16846523] [-1.4579648]
20 0.81408405 [2.3408597] [-0.5772363]
40 0.7019575 [2.357457] [-0.43799806]

1960 0.075006336 [1.7020831] [1.4938751]
1980 0.07500549 [1.701962] [1.4942316]
2000 0.07500488 [1.7018478] [1.4945673]
########################################


