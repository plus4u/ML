x = tf.constant(30.0, tf.float32)
y = tf.constant(35.0)
xy= tf.add(x, y)

sess=tf.Session()

sess.run(xy) # 65

x =tf.placeholder(tf.float32)
y =tf.placeholder(tf.float32)
add_node= x+y

print(sess.run(add_node,feed_dict={x:1, y:2}))   # 3.0
print(sess.run(add_node, feed_dict={x:[3,4,5, 6], y:[2,2, 2, 3]}))  # [5. 6. 7. 9.]

x_train = [1,2,3,4]
y_train = [3,5,7, 8]
W = tf.Variable(tf.random_normal([1]), name='weight')
b = tf.Variable(tf.random_normal([1]), name='bias')
hypothesis = x_train*W + b
cost = tf.reduce_mean(tf.square(hypothesis - y_train))
optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)
train = optimizer.minimize(cost)
ses = tf.Session()
sess.run(tf.global_variables_initializer())
for step in range(2001) :
    sess.run(train)
    if step % 20 ==0:
        print(step, sess.run(cost), sess.run(W), sess.run(b))
        
